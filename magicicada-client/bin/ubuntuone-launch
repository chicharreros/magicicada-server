#!/usr/bin/python

# Magicicada storage synchronization daemon startup helper
#
# Author: John Lenton <john.lenton@canonical.com>
#
# Copyright 2010-2012 Canonical Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# In addition, as a special exception, the copyright holders give
# permission to link the code of portions of this program with the
# OpenSSL library under certain conditions as described in each
# individual source file, and distribute linked combinations
# including the two.
# You must obey the GNU General Public License in all respects
# for all of the code used other than OpenSSL.  If you modify
# file(s) with this exception, you may extend this exception to your
# version of the file(s), but you are not obligated to do so.  If you
# do not wish to do so, delete this exception statement from your
# version.  If you delete this exception statement from all source
# files in the program, then also delete it here.
"""
Storage synchronization daemon (syncdaemon) startup helper.

This script decides whether to start and connect syncdaemon.

 * If you've never used file sync, or if you've disabled
   file sync via the control panel (or equivalently via setting
   files_sync_enabled to False in the syncdaemon configuration file),
   syncdaemon is not started, and nothing happens as a result of this
   script being run.

 * otherwise if syncdaemon is not already running it is started, and
   local rescan is allowed to finish.

 * if syncdaemon has never synced to the server, or if there are no
   credentials, nothing further happens.

 * otherwise, syncdaemon is asked to connect.

"""
import sys
import os

ROOT_FOLDER = os.path.expanduser('~/Magicicada/')

if __name__ == '__main__':
    # this check is done early to speed up startup on people who are not
    # (yet) using the service (this way avoids all the imports).
    if not os.path.isdir(ROOT_FOLDER):
        # no directory, just quit
        sys.exit(1)

import dbus

from dbus.mainloop.glib import DBusGMainLoop
from gi.repository import GLib
from twisted.internet import defer

from ubuntuone.syncdaemon.config import get_user_config
from ubuntuone.platform.tools import SyncDaemonTool, is_already_running


@defer.inlineCallbacks
def main():
    """Start syncdaemon and ask it to connect, if possible."""
    GLib.set_application_name("ubuntuone-launch")

    files_sync_enabled = get_user_config().get_files_sync_enabled()
    if not files_sync_enabled:
        # SD will not start (has been disabled by user)
        raise RuntimeError("File sync is disabled")

    loop = DBusGMainLoop(set_as_default=True)
    bus = dbus.SessionBus(mainloop=loop)
    sync_daemon_tool = SyncDaemonTool(bus)
    running = yield is_already_running(bus=bus)
    if not running:
        # have SD start
        yield sync_daemon_tool.start()
        yield sync_daemon_tool.wait_for_signal('StatusChanged',
                lambda a: a.get('name', '') == 'READY')


if __name__ == '__main__':
    d = main()
    # os._exit feels like it's cheating, but it's simple and fast
    d.addCallbacks(lambda _: os._exit(0), lambda _: os._exit(1))

    mainloop = GLib.MainLoop()
    mainloop.run()
