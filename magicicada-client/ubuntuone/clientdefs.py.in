# ubuntuone.clientdefs - Configure-time definitions
#
# Author: David Planella <david.planella@ubuntu.com>
#
# Copyright 2009-2012 Canonical Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# In addition, as a special exception, the copyright holders give
# permission to link the code of portions of this program with the
# OpenSSL library under certain conditions as described in each
# individual source file, and distribute linked combinations
# including the two.
# You must obey the GNU General Public License in all respects
# for all of the code used other than OpenSSL.  If you modify
# file(s) with this exception, you may extend this exception to your
# version of the file(s), but you are not obligated to do so.  If you
# do not wish to do so, delete this exception statement from your
# version.  If you delete this exception statement from all source
# files in the program, then also delete it here.
"""Configure-time definitions for the client."""

import gettext
import os
import platform
import urllib

NAME = 'Magicicada'
VERSION = "@VERSION@"
LOCALEDIR = "@localedir@"
LIBEXECDIR = "@libexecdir@"
GETTEXT_PACKAGE = "@GETTEXT_PACKAGE@"
PROJECT_NAME = "@GETTEXT_PACKAGE@"
PROJECT_DIR = os.path.join('@prefix@', 'share', PROJECT_NAME)
BIN_DIR = os.path.join('@prefix@', 'lib', PROJECT_NAME)


def Q_(string):
    return gettext.dgettext(GETTEXT_PACKAGE, string)


def platform_data():
    result = {'platform': platform.system(),
              'platform_version': platform.release(),
              'platform_arch': platform.machine(),
              'client_version': VERSION}
    # urlencode will not encode unicode, only bytes
    result = urllib.urlencode(result)
    return result
